-- --------------------------------------------------------
-- Host:                         127.0.0.1
-- Server version:               5.1.65-community-log - MySQL Community Server (GPL)
-- Server OS:                    Win32
-- HeidiSQL version:             7.0.0.4053
-- Date/time:                    2014-04-24 20:29:03
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET FOREIGN_KEY_CHECKS=0 */;

-- Dumping structure for table project_tema.Modules
DROP TABLE IF EXISTS `Modules`;
CREATE TABLE IF NOT EXISTS `Modules` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `Name` text NOT NULL,
  `Layer` int(11) NOT NULL,
  `Funk` text NOT NULL,
  `Char` text NOT NULL,
  PRIMARY KEY (`ID`),
  KEY `FK_Modules_layer` (`Layer`),
  CONSTRAINT `FK_Modules_layer` FOREIGN KEY (`Layer`) REFERENCES `layer` (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=24 DEFAULT CHARSET=utf8;

-- Dumping data for table project_tema.Modules: ~19 rows (approximately)
/*!40000 ALTER TABLE `Modules` DISABLE KEYS */;
INSERT INTO `Modules` (`ID`, `Name`, `Layer`, `Funk`, `Char`) VALUES
	(1, 'Фасад приложения', 2, '', 'Этот необязательный компонент обычно обеспечивает упрощенный интерфейс для компонентов бизнес-логики, часто сочетая множество бизнес-операций в одну, что упрощает использование бизнес-логики.'),
	(2, 'Компоненты бизнес-процесса.', 2, '', 'После того, как компоненты UI получили необходимые данные от пользователя и передали их в бизнес-слой, приложение может использовать эти данные для осуществления бизнес-процесса. Большинство бизнес-процессов включают множество этапов, которые должны выполняться в установленном порядке и могут взаимодействовать друг с другом через различные механизмы координирования.'),
	(4, 'Компоненты бизнес-сущностей.', 2, '', 'Бизнес-сущности, или более общее название – бизнес-объекты, инкапсулируют бизнес-логику и данные, необходимые для представления в приложении объектов реального мира, таких как заказчики (Customers) или заказы (Orders).'),
	(5, 'Компоненты UI', 1, '', 'это визуальные элементы, отображающие данные пользователю и принимающие пользовательский ввод. В рамках отдельного слоя представления их обычно называют Представлениями (Views).'),
	(7, 'Компоненты доступа к данным', 3, '', 'Эти компоненты абстрагируют логику, необходимую для доступа к базовым хранилищам данных. Они обеспечивают централизацию общей функциональности доступа к данным, что способствует упрощению настройки и обслуживания приложения.'),
	(9, 'Агенты сервисов', 3, '', 'это объекты, которые управляют семантикой взаимодействия с внешними сервисами, изолируют приложение от специфических особенностей взаимодействия с разными сервисами и обеспечивают дополнительные сервисы, такие как сопоставление формата данных, предоставляемого сервисом, и формата, требуемого приложением. Они также могут реализовывать кэширование и поддержку работы в автономном режиме или неустойчивого подключения.'),
	(10, 'Фасад приложения', 5, '', 'Этот необязательный компонент обычно обеспечивает упрощенный интерфейс для компонентов бизнес-логики, часто сочетая множество бизнес-операций в одну, что упрощает использование бизнес-логики.'),
	(11, 'Компоненты доступа к данным', 6, '', 'Эти компоненты абстрагируют логику, необходимую для доступа к базовым хранилищам данных. Они обеспечивают централизацию общей функциональности доступа к данным, что способствует упрощению настройки и обслуживания приложения.'),
	(12, 'Компоненты бизнес-процесса.', 5, '', 'После того, как компоненты UI получили необходимые данные от пользователя и передали их в бизнес-слой, приложение может использовать эти данные для осуществления бизнес-процесса. Большинство бизнес-процессов включают множество этапов, которые должны выполняться в установленном порядке и могут взаимодействовать друг с другом через различные механизмы координирования.'),
	(13, 'Компоненты бизнес-сущностей.', 5, '', 'Бизнес-сущности, или более общее название – бизнес-объекты, инкапсулируют бизнес-логику и данные, необходимые для представления в приложении объектов реального мира, таких как заказчики (Customers) или заказы (Orders).'),
	(14, 'Компоненты UI', 4, '', 'это визуальные элементы, отображающие данные пользователю и принимающие пользовательский ввод. В рамках отдельного слоя представления их обычно называют Представлениями (Views).'),
	(15, 'Агенты сервисов', 6, '', 'это объекты, которые управляют семантикой взаимодействия с внешними сервисами, изолируют приложение от специфических особенностей взаимодействия с разными сервисами и обеспечивают дополнительные сервисы, такие как сопоставление формата данных, предоставляемого сервисом, и формата, требуемого приложением. Они также могут реализовывать кэширование и поддержку работы в автономном режиме или неустойчивого подключения.'),
	(16, 'Фасад приложения', 16, '', 'Этот необязательный компонент обычно обеспечивает упрощенный интерфейс для компонентов бизнес-логики, часто сочетая множество бизнес-операций в одну, что упрощает использование бизнес-логики.'),
	(17, 'Компоненты бизнес-процесса.', 16, '', 'После того, как компоненты UI получили необходимые данные от пользователя и передали их в бизнес-слой, приложение может использовать эти данные для осуществления бизнес-процесса. Большинство бизнес-процессов включают множество этапов, которые должны выполняться в установленном порядке и могут взаимодействовать друг с другом через различные механизмы координирования.'),
	(18, 'Компоненты бизнес-сущностей.', 16, '', 'Бизнес-сущности, или более общее название – бизнес-объекты, инкапсулируют бизнес-логику и данные, необходимые для представления в приложении объектов реального мира, таких как заказчики (Customers) или заказы (Orders).'),
	(19, 'Компоненты доступа к данным', 17, '', 'Эти компоненты абстрагируют логику, необходимую для доступа к базовым хранилищам данных. Они обеспечивают централизацию общей функциональности доступа к данным, что способствует упрощению настройки и обслуживания приложения.'),
	(20, 'Агенты сервисов', 17, '', 'это объекты, которые управляют семантикой взаимодействия с внешними сервисами, изолируют приложение от специфических особенностей взаимодействия с разными сервисами и обеспечивают дополнительные сервисы, такие как сопоставление формата данных, предоставляемого сервисом, и формата, требуемого приложением. Они также могут реализовывать кэширование и поддержку работы в автономном режиме или неустойчивого подключения.'),
	(22, 'Интерфейсы сервисов', 15, '', 'Сервисы предоставляют интерфейсы, в которые передаются все входящие сообщения. Интерфейс сервиса можно рассматривать как фасад, предоставляющий потенциальным потребителям доступ к бизнес-логике, реализованной в приложении (как правило, логику бизнес-слоя).'),
	(23, 'Типы сообщений', 15, '', 'При обмене данными через слой сервисов структуры данных заключаются в структуры сообщений, поддерживающие разные типы операций. Слой сервисов также обычно включает типы и контракты данных, которые определяют используемые в сообщениях типы данных.');
/*!40000 ALTER TABLE `Modules` ENABLE KEYS */;
/*!40014 SET FOREIGN_KEY_CHECKS=1 */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
